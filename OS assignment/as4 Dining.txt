#include<stdio.h>
#include<unistd.h>
#include<pthread.h>
#include<semaphore.h>
pthread_t p[5];
sem_t s[5];
void *eating( void *args)
{
	int i=(int)args;
	sem_wait(&s[i]);
	sem_wait(&s[(i+1)%5]);
	printf("\n %d Philosopher is eating",i);
	sleep(1);
	printf("\n %d Philosopher eating is over",i);
	sem_post(&s[(i+1)%5]);
	sem_post(&s[i]);

}
int main()
{
	int i;
	for(i=0;i<5;i++)   sem_init(&s[i],0,1);
	for(i=0;i<5;i++)   pthread_create(&p[i],NULL,eating,(void *) i);
	for(i=0;i<5;i++)   pthread_join(p[i],NULL);
	return 0;
	
}
