#include<stdio.h>
int n,nf,in[100],p[50],hit=0,i,j,k,pgfaultcnt=0;
void getData(){
	printf("\nEnter Length of page sequence :");
	scanf("%d",&n);
	printf("\nEnter the page reference sequence:");
	for(i=0;i<n;i++)
		scanf("%d",&in[i]);
	printf("\Enter no of frames:");
	scanf("%d",&nf);
}
void init(){
	pgfaultcnt=0;
	for(i=0;i<nf;i++) p[i]=9999;
}
int isHit( int data){
	hit=0;
	for(j=0;j<nf;j++){
		if(p[j]==data){
			hit=1;
			break;
		}
		
	}
	return hit;
}
void disPages(){
	for(k=0;k<nf;k++)
		if(p[k]!=9999)
		   printf("%d",p[k]);
}
void disPagefaultcnt(){
	
		   printf("\nTotal no of page faults:%d",pgfaultcnt);
}
void fifo(){
	init();
	for(i=0;i<n;i++){
		printf("\nFor %d :",in[i]);
		if(isHit(in[i])==0){
			for(k=0;k<nf-1;k++)
			  p[k]=p[k+1];
			p[k]=in[i];
			pgfaultcnt++;
			disPages();
		}
		else
		   printf("No page fault");
	}
	disPagefaultcnt();
}

void lru(){
	init();
	int least[50];
	for(i=0;i<n;i++){
		printf("\nFor %d :",in[i]);
		if(isHit(in[i])==0){
			for(j=0;j<nf;j++){
			    int pg=p[j];
			    int found=0;
			    for(k=i-1;k>=0;k--){
			        if(pg==in[k]){
			            least[j]=k;
			            found=1;
			            break;
			        }
			        else
			            found=0;
			    }
			    if(!found)
			        least[j]=-9999;
			}
			int min=9999;
			int repindex;
			for(j=0;j<nf;j++){
			     if(least[j]<min){
			         min=least[j];
			         repindex=j;
			     }
			}
			p[repindex]=in[i];
			pgfaultcnt++;
			disPages();
		}
		else
		   printf("No page fault");
	}
	disPagefaultcnt();
}
void optimal(){
	init();
	int next[50];
	for(i=0;i<n;i++){
		printf("\nFor %d :",in[i]);
		if(isHit(in[i])==0){
			for(j=0;j<nf;j++){
			    int pg=p[j];
			    int found=0;
			    for(k=i;k<n;k++){
			        if(pg==in[k]){
			            next[j]=k;
			            found=1;
			            break;
			        }
			        else
			            found=0;
			    }
			    if(!found)
			        next[j]=9999;
			}
			int max=-9999;
			int repindex;
			for(j=0;j<nf;j++){
			     if(next[j]>max){
			         max=next[j];
			         repindex=j;
			     }
			}
			p[repindex]=in[i];
			pgfaultcnt++;
			disPages();
		}
		else
		   printf("No page fault");
	}
	disPagefaultcnt();
}

int main(){
	int option;
	while(1){
		printf("\n Page replacement algo \n1.Enter values\n2.FIFO\n3.Optimal\n4.LRU\n\n5.Exit\nChoose an option:");
		scanf("%d",&option);
		switch(option)
		{
			case 1:
			   getData();
			   break;
			case 2:
			   fifo();
			   break;
			case 3:
			   optimal();
			   break;
			case 4:
			   lru();
			   break;
			default:
			   return 0;
			   break;
		}
	}
}
	
	


